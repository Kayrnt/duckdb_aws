name: MacOS
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  macos:
    name: MacOS Release (Universal)
    runs-on: macos-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]

    env:
      OSX_BUILD_UNIVERSAL: 1
      GEN: ninja

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install Ninja
        run: brew install ninja

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install OpenSSL
        shell: bash
        run: |
          mkdir -p build/openssl
          cd build/openssl
          mkdir sources build
          curl https://www.openssl.org/source/openssl-3.0.5.tar.gz | tar xv -C sources --strip-components 1
          export OPENSSL_ROOT_DIR=`pwd`/build
          cd sources
          export CC="clang -arch x86_64 -arch arm64"
          perl ./Configure --prefix=$OPENSSL_ROOT_DIR darwin64-x86_64-cc no-asm
          make -j
          make install_sw

      - name: Checkout DuckDB to version
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}


      - name: Get OpenSSL path
        shell: bash
        run: |
          export OPENSSL_ROOT_DIR=`pwd`/build/openssl/build
          echo "OPENSSL_ROOT_DIR=$OPENSSL_ROOT_DIR" >> $GITHUB_ENV

      - name: Build + test extension
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: minio_duckdb_user
          AWS_SECRET_ACCESS_KEY: minio_duckdb_user_password
        run: |
          make release
          make test